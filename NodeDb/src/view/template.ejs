<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>To-Do List</title>
</head>
<body>
    <h3>Adding data to my list:</h3>
    <input type="text" placeholder="Enter Your Task" id="task-detail">
    <button id="add-task">Add Task</button>
    
    <h3>Tasks:</h3>
    <ul id="task-list">
        <% taskList.forEach((task) => { %>
            <li>
                <span class="task-name" data-task-id="<%- task.id %>">
                    <%- task.id %> .  <%- task.name %>
                </span>
                
                
                <button class="delete"  data-task-id="<%- task.id %>">Delete</button>
                <button class="edit"  data-task-id="<%- task.id %>">Edit</button>
            </li>
        <% }) %>
        </ul>

    <script>
        var addTaskBtn = document.querySelector('#add-task');
        var taskList = document.querySelector('#task-list');
        const inputItem = document.querySelector('#task-detail');
     
        addTaskBtn.addEventListener('click', function () {
            const inputItem = document.querySelector('#task-detail');
            console.log('input item>>>>>>>>>>>>>',   inputItem)
            const taskName = inputItem.value;
            console.log('tasknameeeeee>>>>>>>===', taskName )
            
            

            



                  
// Send a request to add a new task
        fetch('/create-task', {
            method: 'post',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ task: taskName })
        })
        .then(result => result.json())
        .then(data => {
            if (data.status === 'done' && taskName !== '') {
                // Extract the taskId from the response data
                const taskId = data.taskId;
                console.log('task name >>>>>.' , data.task);
                console.log('taskid >>>>>>>>>>>>>>>>>>>',taskId)
                
                // Append the new task to the task list without refreshing
                
                const taskItem = document.createElement('li');
                taskItem.innerHTML = `
                     <span>
                             ${taskId} 
                      </span>
                      <span> : </span>
                    <span class="task-name" >
                        ${taskName}
                    </span>
                    <button class="delete" data-task-id="${taskId}">Delete</button>
                    <button class="edit" data-task-id="${taskId}">Edit</button>`;
                    console.log('taskItem>>>>>>>>>>>>>>>>' , taskItem)
                taskList.appendChild(taskItem);
                
                inputItem.value = ''; // Clear the input field
            } 
         else {
                alert('Failed to add the task.');
            }
        });
    })
// for deleting 

        taskList.addEventListener('click',function(event){
            if (event.target.classList.contains('delete')) {
                const listItem = event.target.parentElement;
                const taskId = event.target.getAttribute('data-task-id');
                console.log('task id for deletion >>>>>>>>>>>',taskId)
                // Send a request to delete the task
                fetch('/delete-task', {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ task: taskId })
                })
                .then(result => result.json())
                .then(data => {
                    if (data.status === 'done') {
                        listItem.remove(); // Remove the task from the list
                    } else {
                        alert('Failed to delete the task.');
                    }
                });
            }

        });


    // Edit or modification task
    taskList.addEventListener('click', function (event) {
                if (event.target.classList.contains('edit')) {
                    event.preventDefault(); 

                    // closest task element (li)
                    const listItem = event.target.closest('li');
                    console.log('closeset li item >>>>>>>>>',listItem);

                    const taskId = event.target.getAttribute('data-task-id');

                    console.log('taskId >>>>>>>>>>>',taskId)
                    
                    const taskNameElement = listItem.querySelector('.task-name');

                    console.log(' taskNameElement>>>>>>>>>>>>>>>>>>>', taskNameElement);
                    const taskName = taskNameElement.textContent;

                    console.log('taskName>>>>>>>>>>>>>>' , taskName)

                    // Display an edit form or input field
                    const editForm = document.createElement('form');
                    editForm.innerHTML = `
                    <span class="task-name" >
                          ${taskName}
                    </span>
                        <input type="text" class="edit-input" value = "${taskName}">
                        <button class = "save" data-task-id="${taskId}">Save</button>
                    `;
                    listItem.appendChild(editForm);

                    console.log('editForm nandan >>>>>>>>>>>>>>>>>>>',editForm)

                  
                    taskNameElement.style.display = 'inline';
                    event.target.style.display = 'inline';

                    // Listen for save button click
                    editForm.addEventListener('click', function (event) {
                        if (event.target.classList.contains('save')) {
                            event.preventDefault(); // Prevent any default action (e.g., form submission)
                            const editedTaskName = editForm.querySelector('.edit-input').value;

                            console.log('editedTaskName==========>',editedTaskName)

                            // Send a request to update the task
                            fetch('/update-task', {
                                method: 'post',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ id: taskId, name: editedTaskName })
                            })
                            .then(result => result.json())
                            .then(data => {
                                if (data.status === 'done') {
                                    // Update the task name on the page
                                    taskNameElement.textContent = editedTaskName;

                                    console.log('editedTaskName>>>>>>>>>>>>>>',editedTaskName);
                                } else {
                                    alert('Failed to update the task.');
                                }

                                // Remove the edit form
                                editForm.remove();

                                // Show the task name and edit button again
                                taskNameElement.style.display = 'inline';
                                 event.target.style.display = 'inline';
                            });
                        }
                    });
                }
            });

 



      


       
           

    </script>
</body>
</html>
